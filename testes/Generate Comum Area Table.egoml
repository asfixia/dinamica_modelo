<?xml version="1.0" standalone="yes" ?>
<script>
    <property key="dff.date" value="2018-Feb-15 12:19:38" />
    <property key="dff.version" value="4.0.5.20171130" />
    <property key="submodel.import" value='CalcAreasAlwaysValid { { &quot;constant&quot; : CategoricalMap } { } { &quot;validAreas&quot; : Table } }' />
    <functor name="LoadCategoricalMap">
        <property key="dff.functor.alias" value="loadCategoricalMap139920" />
        <inputport name="filename">&quot;../../../data_dir/data/uso_da_terra/brasil/uso_da_terra_2013/uso_da_terra_2013.tif&quot;</inputport>
        <inputport name="nullValue">.none</inputport>
        <inputport name="loadAsSparse">.no</inputport>
        <inputport name="suffixDigits">0</inputport>
        <inputport name="step">.none</inputport>
        <inputport name="workdir">.none</inputport>
        <outputport name="map" id="v1" />
    </functor>
    <functor name="LoadCategoricalMap">
        <property key="dff.functor.alias" value="loadCategoricalMap13992" />
        <inputport name="filename">&quot;../../../data_dir/data/uso_da_terra/brasil/uso_da_terra_2030/uso_da_terra_2030.tif&quot;</inputport>
        <inputport name="nullValue">.none</inputport>
        <inputport name="loadAsSparse">.no</inputport>
        <inputport name="suffixDigits">0</inputport>
        <inputport name="step">.none</inputport>
        <inputport name="workdir">.none</inputport>
        <outputport name="map" id="v2" />
    </functor>
    <functor name="Table">
        <property key="dff.functor.alias" value="table13995" />
        <inputport name="constant">[&#x0A;    &quot;Key*&quot;, &quot;map2013&quot;, &quot;map2030&quot;, &quot;Area&quot;, &#x0A;]</inputport>
        <outputport name="object" id="v3" />
    </functor>
    <functor name="SaveTable">
        <property key="dff.functor.alias" value="saveTable31195" />
        <inputport name="table" peerid="v10" />
        <inputport name="filename">&quot;C:/Users/administrador.ENCELADUS/Desktop/gen_dinamica/table.csv&quot;</inputport>
        <inputport name="suffixDigits">2</inputport>
        <inputport name="step">.none</inputport>
        <inputport name="workdir">.none</inputport>
    </functor>
    <containerfunctor name="ForEachCategory">
        <property key="dff.container.collapsed" value="no" />
        <property key="dff.functor.alias" value="forEachCategory31164" />
        <inputport name="categorization" peerid="v2" />
        <internaloutputport name="step" id="v4" />
        <functor name="MuxTable">
            <property key="dff.functor.alias" value="muxTable140170" />
            <inputport name="initial" peerid="v3" />
            <inputport name="feedback" peerid="v10" />
            <outputport name="table" id="v5" />
        </functor>
        <functor name="Step">
            <property key="dff.functor.alias" value="step13989" />
            <property key="viewer.step" value="yes" />
            <inputport name="step" peerid="v4" />
            <outputport name="step" id="v6" />
        </functor>
        <containerfunctor name="ForEachCategory">
            <property key="dff.container.collapsed" value="no" />
            <property key="dff.functor.alias" value="forEachCategory31167" />
            <inputport name="categorization" peerid="v1" />
            <internaloutputport name="step" id="v7" />
            <functor name="Step">
                <property key="dff.functor.alias" value="step13991" />
                <property key="viewer.step" value="yes" />
                <inputport name="step" peerid="v7" />
                <outputport name="step" id="v8" />
            </functor>
            <functor name="CalcAreasAlwaysValid">
                <property key="dff.functor.alias" value="calcAreasAlwaysValid16464" />
                <inputport name="constant" peerid="v12" />
                <outputport name="validAreas" id="v9" />
            </functor>
            <functor name="MuxTable">
                <property key="dff.functor.alias" value="muxTable14017" />
                <property key="viewer.table" value="yes" />
                <inputport name="initial" peerid="v5" />
                <inputport name="feedback" peerid="v17" />
                <outputport name="table" id="v10" />
            </functor>
            <functor name="GetTableValue">
                <property key="dff.functor.alias" value="getTableValue14013" />
                <inputport name="table" peerid="v9" />
                <inputport name="keys">[ 1 ]</inputport>
                <inputport name="column">&quot;Area_In_Square_Meters&quot;</inputport>
                <inputport name="valueIfNotFound">.none</inputport>
                <outputport name="result" id="v11" />
            </functor>
            <containerfunctor name="CalculateCategoricalMap">
                <property key="dff.container.collapsed" value="no" />
                <property key="dff.functor.alias" value="calculateCategoricalMap13997" />
                <property key="viewer.result" value="yes" />
                <inputport name="expression">[&#x0A;    if i1 = v1 and i2 = v2 then&#x0A;        1&#x0A;    else &#x0A;        null&#x0A;]</inputport>
                <inputport name="cellType">.int8</inputport>
                <inputport name="nullValue">.default</inputport>
                <inputport name="resultIsSparse">.no</inputport>
                <inputport name="resultFormat">.none</inputport>
                <outputport name="result" id="v12" />
                <functor name="NumberMap">
                    <property key="dff.functor.alias" value="numberMap31170" />
                    <inputport name="map" peerid="v2" />
                    <inputport name="mapNumber">1</inputport>
                </functor>
                <functor name="NumberMap">
                    <property key="dff.functor.alias" value="numberMap31171" />
                    <inputport name="map" peerid="v1" />
                    <inputport name="mapNumber">2</inputport>
                </functor>
                <functor name="NumberValue">
                    <property key="dff.functor.alias" value="numberValue31172" />
                    <inputport name="value" peerid="v6" />
                    <inputport name="valueNumber">1</inputport>
                </functor>
                <functor name="NumberValue">
                    <property key="dff.functor.alias" value="numberValue31173" />
                    <inputport name="value" peerid="v8" />
                    <inputport name="valueNumber">2</inputport>
                </functor>
            </containerfunctor>
            <containerfunctor name="Group">
                <property key="dff.functor.alias" value="group31186" />
                <functor name="AddTupleValue">
                    <property key="dff.functor.alias" value="addTupleValue14011" />
                    <inputport name="tuple">[]</inputport>
                    <inputport name="value" peerid="v18" />
                    <outputport name="result" id="v13" />
                </functor>
                <functor name="AddTupleValue">
                    <property key="dff.functor.alias" value="indMap2" />
                    <inputport name="tuple" peerid="v13" />
                    <inputport name="value" peerid="v8" />
                    <outputport name="result" id="v14" />
                </functor>
                <functor name="AddTupleValue">
                    <property key="dff.functor.alias" value="indMap1" />
                    <inputport name="tuple" peerid="v14" />
                    <inputport name="value" peerid="v6" />
                    <outputport name="result" id="v15" />
                </functor>
                <functor name="AddTupleValue">
                    <property key="dff.functor.alias" value="addTupleValue14012" />
                    <inputport name="tuple" peerid="v15" />
                    <inputport name="value" peerid="v11" />
                    <outputport name="result" id="v16" />
                </functor>
                <functor name="AddTableRow">
                    <property key="dff.functor.alias" value="addTableRow14002" />
                    <inputport name="table" peerid="v10" />
                    <inputport name="values" peerid="v16" />
                    <outputport name="result" id="v17" />
                </functor>
                <containerfunctor name="CalculateValue">
                    <property key="dff.container.collapsed" value="no" />
                    <property key="dff.functor.alias" value="calculateValue14007" />
                    <inputport name="expression">[&#x0A;    v1 * 1000 + v2&#x0A;]</inputport>
                    <inputport name="defaultValue">.none</inputport>
                    <outputport name="result" id="v18" />
                    <functor name="NumberValue">
                        <property key="dff.functor.alias" value="numberValue31188" />
                        <inputport name="value" peerid="v6" />
                        <inputport name="valueNumber">1</inputport>
                    </functor>
                    <functor name="NumberValue">
                        <property key="dff.functor.alias" value="numberValue31189" />
                        <inputport name="value" peerid="v8" />
                        <inputport name="valueNumber">2</inputport>
                    </functor>
                </containerfunctor>
            </containerfunctor>
        </containerfunctor>
    </containerfunctor>
</script>
